<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:89d3baff-3c9e-4944-b8c7-91e24878c006 -->
<metadata name="productCatalog_xform" path="/shared/examples/productCatalog_xform" type="PROCEDURE" subtype="TRANSFORM_PROCEDURE" changeToken="7266071941608374319">
  <parameters>
    <parameter name="outputs" direction="OUT" nullable="false">
      <datatype name="outputs" type="TABLE" refId="256">
        <element name="ProductID">
          <datatype name="NUMERIC" type="DECIMAL" maxDigits="32" maxFractionalDigits="0"/>
        </element>
        <element name="ProductName">
          <datatype name="VARCHAR" type="STRING" maxLength="32768"/>
        </element>
        <element name="CategoryID">
          <datatype name="NUMERIC" type="DECIMAL" maxDigits="32" maxFractionalDigits="0"/>
        </element>
        <element name="CategoryName">
          <datatype name="VARCHAR" type="STRING" maxLength="32768"/>
        </element>
        <element name="ProductDescription">
          <datatype name="VARCHAR" type="STRING" maxLength="32768"/>
        </element>
        <element name="SerialNumber">
          <datatype name="VARCHAR" type="STRING" maxLength="32768"/>
        </element>
        <element name="UnitPrice">
          <datatype name="DECIMAL" type="DECIMAL" maxDigits="32" maxFractionalDigits="6"/>
        </element>
        <element name="ReorderLevel">
          <datatype name="NUMERIC" type="DECIMAL" maxDigits="32" maxFractionalDigits="0"/>
        </element>
        <element name="LeadTime">
          <datatype name="VARCHAR" type="STRING" maxLength="32768"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ EXECUTE"/>
  </security>
  <dependency target="/shared/examples/ds_XML/productCatalog.xml" type="TREE">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <attribute name="creationDate" type="LONG">1398448186761</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="lastModifiedDate" type="LONG">1614761166619</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="transformModel" type="BYTE_ARRAY"></attribute>
  <attribute name="transformSource" type="STRING">declare copy-namespaces no-preserve,inherit;
declare namespace xquery =  &quot;http://compositesw.com/transform/xquery&quot;;
declare namespace custom =  &quot;http://compositesw.com/transform/custom&quot;;
declare namespace xs =  &quot;http://www.w3.org/2001/XMLSchema&quot;;
declare namespace ext2 =  &quot;http://www.compositesw.com/extensions2&quot;;
declare namespace sql =  &quot;http://compositesw.com/transform/sql&quot;;

declare function local:productCatalog_xml( )
{
  (:invoke resource /shared/examples/ds_XML/&quot;&quot;productCatalog.xml&quot;&quot; :)
  let $var4 := doc(&quot;/shared/examples/ds_XML/&quot;&quot;productCatalog.xml&quot;&quot;&quot;)/catalog
  return
    $var4
};

declare function local:cast2( $ProductName)
{
  fn:substring($ProductName, 0 ,32769)
};

declare function local:cast( $CategoryName)
{
  fn:substring($CategoryName, 0 ,32769)
};

declare function local:cast3( $ProductDescription)
{
  fn:substring($ProductDescription, 0 ,32769)
};

declare function local:cast4( $SerialNumber)
{
  fn:substring($SerialNumber, 0 ,32769)
};

declare function local:cast5( $LeadTime)
{
  fn:substring($LeadTime, 0 ,32769)
};

let $nodes := 
(
  let $var4:= local:productCatalog_xml()
  return
  (
    for $var0 at $counter1 in $var4/category
    return 
      if (fn:not($counter1 &lt;= 2147483647 and fn:true()))
      then ()
      else 
        for $var3 at $counter2 in $var0/products/product
        return 
          if (fn:not($counter2 &lt;= 2147483647 and fn:true()))
          then ()
          else 
            element outputs
            {
              (
                element ProductID
                {
                  if (fn:string-length(fn:string($var3/ProductID)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var3/ProductID/text()
                }
                ,
                let $var8 := $var3/ProductName/text()
                let $var7:= local:cast2(fn:data($var8))
                return
                element ProductName
                {
                  if (fn:string-length(fn:string($var7)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var7
                }
                ,
                element CategoryID
                {
                  if (fn:string-length(fn:string($var0/CategoryID)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var0/CategoryID/text()
                }
                ,
                let $var12 := $var0/CategoryName/text()
                let $var11:= local:cast(fn:data($var12))
                return
                element CategoryName
                {
                  if (fn:string-length(fn:string($var11)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var11
                }
                ,
                let $var15 := $var3/ProductDescription/text()
                let $var14:= local:cast3(fn:data($var15))
                return
                element ProductDescription
                {
                  if (fn:string-length(fn:string($var14)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var14
                }
                ,
                let $var18 := $var3/SerialNumber/text()
                let $var17:= local:cast4(fn:data($var18))
                return
                element SerialNumber
                {
                  if (fn:string-length(fn:string($var17)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var17
                }
                ,
                element UnitPrice
                {
                  if (fn:string-length(fn:string($var3/UnitPrice)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var3/UnitPrice/text()
                }
                ,
                element ReorderLevel
                {
                  if (fn:string-length(fn:string($var3/ReorderLevel)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var3/ReorderLevel/text()
                }
                ,
                let $var23 := $var3/LeadTime/text()
                let $var22:= local:cast5(fn:data($var23))
                return
                element LeadTime
                {
                  if (fn:string-length(fn:string($var22)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var22
                }
              )
            }
    ,
    let $counter := count($var4/category/products/product)
    return
      if ($counter &gt;= 0) then
      ()
      else 
        for $k in (1 to ( 0 - $counter))
        return
          element outputs
          {
            (
              element ProductID
              {
              }
              ,
              element ProductName
              {
              }
              ,
              element CategoryID
              {
              }
              ,
              element CategoryName
              {
              }
              ,
              element ProductDescription
              {
              }
              ,
              element SerialNumber
              {
              }
              ,
              element UnitPrice
              {
              }
              ,
              element ReorderLevel
              {
              }
              ,
              element LeadTime
              {
              }
            )
          }
  )
)
return
$nodes</attribute>
</metadata>